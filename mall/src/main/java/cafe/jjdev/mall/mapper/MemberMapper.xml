<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cafe.jjdev.mall.mapper.MemberMapper">
	<!-- 임시 비밀번호로 변경 -->
	<update id="updateTempPw" parameterType="map">
		UPDATE member 
        SET member_pw = #{tempPw}
        WHERE member_id = #{memberId}
        AND member_email = #{memberEmail}
	</update>
	<!-- 비밀번호 찾기 -->
	<select id="selectFindPw" parameterType="cafe.jjdev.mall.vo.Member" resultType="cafe.jjdev.mall.vo.Member">
		SELECT member_Id AS memberId,
			member_email AS memberEmail
		FROM member
		WHERE member_id = #{memberId}
		AND member_email = #{memberEmail}
	</select>
	<!-- 아이디 찾기 -->
	<select id="selectFindId" parameterType="cafe.jjdev.mall.vo.Member" resultType="cafe.jjdev.mall.vo.Member">
		SELECT member_id AS memberId,
			member_email AS memberEmail
		FROM member
		WHERE member_name = #{memberName}
		AND member_email = #{memberEmail}
	</select>
	<!-- 회원 가입 시 아이디 중복 검사 -->
	<select id="selectMemberId" parameterType="String" resultType="String">
		SELECT member_id
		FROM member
		WHERE member_id = #{memberId}
	</select>
	<select id="selectMemberOutId" parameterType="String" resultType="String">
		SELECT member_out_id
		FROM member_out
		WHERE member_out_id = #{memberId}
	</select>
	<!-- 탈퇴 후 아이디 보관 -->
	<insert id="insertMemberOut" parameterType="String">
		INSERT INTO member_out(
            member_out_id,
            member_out_date
		) VALUES(
            #{memberId},
            now()
        )
	</insert>
	<!-- 회원 탈퇴 -->
	<delete id="deleteMember" parameterType="cafe.jjdev.mall.vo.Member">
		DELETE FROM member
        WHERE member_id = #{memberId} 
        AND member_pw = #{memberPw}
	</delete>
	<!-- 회원 정보 수정 -->
	<update id="updateMember" parameterType="cafe.jjdev.mall.vo.Member">
		UPDATE member 
        SET member_phone = #{memberPhone},
        	member_address = #{memberAddress}
        WHERE member_id = #{memberId}
	</update>
	<!-- 비밀번호 수정 -->
	<update id="updateMemberPw" parameterType="java.util.Map">
		UPDATE member 
        SET member_pw = #{memberNewPw}
        WHERE member_id = #{memberId}
        AND member_pw = #{memberPw}
	</update>
	<!-- 개인 정보 조회 -->
	<select id="selectMemberForInfo" parameterType="String" resultType="cafe.jjdev.mall.vo.Member">
		SELECT member_no AS memberNo,
			member_id AS memberID,
			member_name AS memberName,
			member_phone AS memberPhone,
			member_address AS memberAddress,
			member_Gender AS memberGender,
			member_Level AS memberLevel
		FROM member
		WHERE member_id = #{memberId}
	</select>
	<!-- 회원 가입 시 member_consumer 테이블에 추가 -->
	<insert id="insertMemberConsumer" parameterType="map">
		INSERT INTO member_consumer
		VALUES(
			#{memberNo},
			#{memberConsumerDateOfBirth}
		)
	</insert>
	<!-- 회원 가입 -->
	<insert id="insertMember" parameterType="cafe.jjdev.mall.vo.Member">
		 INSERT INTO member(
            member_id,
            member_pw,
            member_name,
            member_phone,
            member_address,
            member_gender,
            member_level,
            member_email
		) VALUES(
            #{memberId},
            #{memberPw},
            #{memberName},
            #{memberPhone},
            #{memberAddress},
            #{memberGender},
            #{memberLevel},
            #{memberEmail}
        )
	</insert>
	<!-- 로그인 처리를 위한 회원 정보 조회 -->
	<select id="selectMemberForLogin" parameterType="cafe.jjdev.mall.vo.Member" resultType="cafe.jjdev.mall.vo.Member">
		SELECT member_name AS memberName, 
			member_level AS memberLevel, 
			member_id AS memberId
		FROM member
		WHERE member_id = #{memberId}
		AND member_pw = #{memberPw}
	</select>
</mapper>